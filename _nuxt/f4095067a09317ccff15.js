(window.webpackJsonp=window.webpackJsonp||[]).push([[16,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451],{1084:function(_,v,e){const n={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var _=this,v=_.$createElement,n=_._self._c||v;return n("div",{staticClass:"frontmatter-markdown"},[n("h2",[_._v("DFA的形式定义")]),_._v(" "),n("p",[_._v("DFA是一个五元组"),n("code",{pre:!0},[_._v("M=(Q, T, δ, q0, F)")])]),_._v(" "),n("ul",[n("li",[_._v("Q 有限状态集合")]),_._v(" "),n("li",[_._v("T 有限输入字母表")]),_._v(" "),n("li",[_._v("δ 状态转移函数")]),_._v(" "),n("li",[_._v("q0 初始状态")]),_._v(" "),n("li",[_._v("F 终止状态集合")])]),_._v(" "),n("p",[_._v("状态转移函数格式")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("δ(状态, 输入字母表) = 新状态\nδ(q0, 0) = q1\n")])]),_._v(" "),n("h3",[_._v("状态转移图")]),_._v(" "),n("p",[n("img",{attrs:{src:e(624),alt:"2-1"}})]),_._v(" "),n("ul",[n("li",[_._v("终止状态使用两个圈表示")]),_._v(" "),n("li",[_._v("起始状态使用一个无源箭头指出")])]),_._v(" "),n("h3",[_._v("状态转移表")]),_._v(" "),n("p",[n("img",{attrs:{src:e(625),alt:"2-2"}})]),_._v(" "),n("ul",[n("li",[_._v("终止状态使用星号标出")]),_._v(" "),n("li",[_._v("起始状态使用箭头指出")])]),_._v(" "),n("h3",[_._v("拓展转移函数以适合于输入字符串")]),_._v(" "),n("p",[_._v("定义"),n("code",{pre:!0},[_._v("δ'")]),_._v("函数如下")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("δ'(状态1, 字符串ω+字符a) = δ(δ'(状态1, 字符串ω), 字符a)\nδ'(q, ωa) = δ(δ'(q, ω), a)\nδ'(q, ε) = q\n")])]),_._v(" "),n("p",[_._v("被DFA接收的字符串：输入结束之后能够使DFA状态到达终止状态的串")]),_._v(" "),n("h2",[_._v("格局")]),_._v(" "),n("p",[_._v("使用一个二元组"),n("code",{pre:!0},[_._v("(q, ω)")]),_._v("表示自动机的一个瞬时状态")]),_._v(" "),n("ul",[n("li",[_._v("初始格局 (q0, ω)")]),_._v(" "),n("li",[_._v("终止格局 (q1, ε)")])]),_._v(" "),n("p",[_._v("格局之间使用符号"),n("code",{pre:!0},[_._v("|-")]),_._v("连接")]),_._v(" "),n("p",[_._v("状态转移举例")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("(q0, 0010) |- (q1, 010) |- (q2, 10) |- (q2, 0) |- (q0, ε)\n")])]),_._v(" "),n("h2",[_._v("不确定的有限自动机(NFA)")]),_._v(" "),n("p",[_._v("修改DFA模型，同一个状态接收同一个输入可以到达不同的新状态")]),_._v(" "),n("p",[_._v("NFA五元组："),n("code",{pre:!0},[_._v("M=(Q, T, δ, q0, F)")])]),_._v(" "),n("p",[_._v("其中状态转移函数δ的等号右边为一个集合，如"),n("code",{pre:!0},[_._v("δ(p, 0) = {p, q}")])]),_._v(" "),n("h2",[_._v("NFA与DFA的转换")]),_._v(" "),n("p",[_._v("DFA本就是NFA的特例。下面介绍NFA转换成DFA的方法")]),_._v(" "),n("p",[n("strong",[_._v("子集构造法")])]),_._v(" "),n("p",[_._v("构造原始NFA中状态的子集，作为生成的DFA中的状态")]),_._v(" "),n("p",[_._v("举例：已知如下NFA")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("δ(p, 0) = {q}\nδ(p, 1) = ∅\nδ(q, 0) = {q}\nδ(q, 1) = {q, r}\nδ(r, 0) = ∅\nδ(r, 1) = ∅\n")])]),_._v(" "),n("p",[_._v("转换DFA的思想就是把新状态集合{q, r}作为DFA的状态，意为"),n("strong",[_._v("状态q或者状态r")]),_._v("。如果"),n("strong",[_._v("状态q或者状态r")]),_._v("接收字符0，得到的新状态应该是"),n("strong",[_._v("状态q接收字符0得到的状态集合")]),_._v("和"),n("strong",[_._v("状态r接收字符0得到的状态集合")]),_._v("的并集，即得到如下转移函数")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("δ({q, r}, 0) = {q}\nδ({q, r}, 1) = {q, r}\n")])]),_._v(" "),n("p",[_._v("如果状态集合中包含终止符号，那么这个状态集合在DFA中表示的状态是DFA的终止符号")]),_._v(" "),n("p",[_._v("例题：")]),_._v(" "),n("p",[n("img",{attrs:{src:e(626),alt:"2-3"}})]),_._v(" "),n("h2",[_._v("带空转移的有限自动机")]),_._v(" "),n("p",[_._v("允许无输入时的状态转移")]),_._v(" "),n("p",[_._v("带空转移的不确定有限自动机表示为ε-NFA，是一个五元组"),n("code",{pre:!0},[_._v("A=(Q, T, δ, q0, F)")]),_._v("，与NFA的区别是转换函数里面可以接受空串")]),_._v(" "),n("h3",[_._v("ε-闭包")]),_._v(" "),n("p",[_._v("ε-闭包，记为 ε-CLOSURE 或 ECLOSE")]),_._v(" "),n("p",[_._v("某个状态q的ε-闭包定义为此状态q仅接受空串能够到达的状态集合（"),n("strong",[_._v("注意包含状态q自身")]),_._v("）")]),_._v(" "),n("h2",[_._v("ε-NFA转换为NFA")]),_._v(" "),n("p",[_._v("NFA本就是ε-NFA的特例。下面介绍ε-NFA转换为NFA的方法。也就是"),n("strong",[_._v("消空转移")])]),_._v(" "),n("p",[_._v("思路：假如从状态a接收某字符x转移到状态b，而状态b接收空串可以到达状态c，那么消空转移生成的NFA中状态a接收字符x可以到达状态b和状态c。即状态a接收字符x可以到达状态b的ε-闭包。")]),_._v(" "),n("p",[_._v("例题：")]),_._v(" "),n("p",[n("img",{attrs:{src:e(627),alt:"2-4"}})]),_._v(" "),n("p",[_._v("解法举例：假设原本ε-NFA的转移函数为δ，令生成的NFA的转移函数为δ1")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("δ1(q0, 0) = ε-CLOSURE(δ(q0, 0))\n")])]),_._v(" "),n("h3",[_._v("关于终止符号集合")]),_._v(" "),n("p",[_._v("已知ε-NFA的终止符号集合为F，初始状态为q0，NFA中的终止符号集合F1定义如下")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("if q0能够通过空转移到达F then F1 = F + q0\nelse F1 = F\n")])]),_._v(" "),n("p",[_._v("也就是说除了初始状态，不需要考虑其他状态可能变成终止符号的情况。")]),_._v(" "),n("h2",[_._v("正则集和正则式")]),_._v(" "),n("p",[_._v("运算符号按照优先级从高到低依次为")]),_._v(" "),n("ul",[n("li",[_._v("星号"),n("code",{pre:!0},[_._v("*")]),_._v(" 闭包")]),_._v(" "),n("li",[_._v("点号"),n("code",{pre:!0},[_._v("·")]),_._v(" 连接")]),_._v(" "),n("li",[_._v("加号"),n("code",{pre:!0},[_._v("+")]),_._v(" 联合")])]),_._v(" "),n("h3",[_._v("正则式的性质")]),_._v(" "),n("p",[_._v("交换律与结合律")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("(a + b) + c = a + (b + c)\n(ab)c = a(bc)\na + b = b + a\n")])]),_._v(" "),n("p",[_._v("等幂律")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("a + a = a\n")])]),_._v(" "),n("p",[_._v("分配率")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("a(b + c) = ab + ac\n(a + b)c = ac + bc\n")])]),_._v(" "),n("p",[_._v("幺元与零元")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("a + ∅ = ∅ + a = a\na∅ = ∅a = ∅\naε = εa = a\n")])]),_._v(" "),n("p",[_._v("闭包相关运算")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("(a*)* = a*\na* = a + a*\n")])]),_._v(" "),n("h2",[_._v("从右线性文法导出正则式")]),_._v(" "),n("p",[_._v("令大写字母为非终结符，小写字母为终结符或终结符串，S为起始非终结符")]),_._v(" "),n("p",[_._v("如果一个非终结符的正则式是"),n("code",{pre:!0},[_._v("A = aA + b")]),_._v("，则A的解为"),n("code",{pre:!0},[_._v("A=a*b")])]),_._v(" "),n("p",[_._v("例题：已知右线性文法生成式如下，求其正则式")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("S -> aA, S -> bB, S -> b\nA -> bA, A -> ε\nB -> bS\n")])]),_._v(" "),n("p",[_._v("解：得到如下联立方程")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("S = aA + bB + b (1)\nA = bA + ε (2)\nB = bS (3)\n")])]),_._v(" "),n("p",[_._v("解方程组即可求得S的正则式")]),_._v(" "),n("p",[_._v("解(2)式得"),n("code",{pre:!0},[_._v("A = b*")]),_._v("，把此结果和(3)式代入(1)式得到")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("S = ab* + bbS + b\n  = bbS + (ab* + b)\n")])]),_._v(" "),n("p",[_._v("解得"),n("code",{pre:!0},[_._v("S = (bb)*(ab* + b)")])]),_._v(" "),n("h2",[_._v("正则表达式与有限自动机")]),_._v(" "),n("h3",[_._v("由DFA构造正则表达式")]),_._v(" "),n("p",[_._v("状态消去法")]),_._v(" "),n("p",[n("img",{attrs:{src:e(628),alt:"2-5"}})]),_._v(" "),n("p",[_._v("如果最后构造出了如下状态")]),_._v(" "),n("p",[n("img",{attrs:{src:e(629),alt:"2-6"}})]),_._v(" "),n("p",[_._v("则对应的正则式为"),n("code",{pre:!0},[_._v("(R + SU*T)*SU*")])]),_._v(" "),n("p",[_._v("例题：")]),_._v(" "),n("p",[n("img",{attrs:{src:e(630),alt:"2-7"}})]),_._v(" "),n("h3",[_._v("正则表达式构造等价ε-NFA")]),_._v(" "),n("p",[_._v("规则如下图")]),_._v(" "),n("p",[n("img",{attrs:{src:e(631),alt:"2-8"}}),_._v(" "),n("img",{attrs:{src:e(632),alt:"2-9"}}),_._v(" "),n("img",{attrs:{src:e(633),alt:"2-10"}})]),_._v(" "),n("p",[_._v("例题：")]),_._v(" "),n("p",[n("img",{attrs:{src:e(634),alt:"2-11"}}),_._v(" "),n("img",{attrs:{src:e(635),alt:"2-12"}})]),_._v(" "),n("h2",[_._v("右线性文法生成等价NFA")]),_._v(" "),n("p",[_._v("右线性文法生成式格式为"),n("code",{pre:!0},[_._v("A -> aB")]),_._v("，可以理解为"),n("strong",[_._v("B的前面加上a等价于A")]),_._v("，所以"),n("strong",[_._v("A消去串首的a可以得到B")]),_._v("，那么NFA中存在状态转移函数"),n("code",{pre:!0},[_._v("δ(A, a) = B")]),_._v("。如果存在生成式"),n("code",{pre:!0},[_._v("A -> a")]),_._v("，那么存在转移函数"),n("code",{pre:!0},[_._v("δ(A, a) = C")]),_._v("，C为一个新的状态而且是终止状态")]),_._v(" "),n("p",[_._v("例题：已知右线性文法"),n("code",{pre:!0},[_._v("G = ({S, B}, {a, b}, P, S)")]),_._v("，其中生成式P如下")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("S -> aB\nB -> aB | bS | a\n")])]),_._v(" "),n("p",[_._v("构造等价NFA，则")]),_._v(" "),n("pre",[n("code",{pre:!0},[_._v("S -> aB => δ(S, a) = {B}\nB -> aB => δ(B, a) = {B}\nB -> bS => δ(B, b) = {S}\nB -> a => δ(B, a) = {H}\n")])]),_._v(" "),n("p",[_._v("其中H为新增的状态且为终止状态")]),_._v(" "),n("h2",[_._v("有限自动机构造等价右线性文法")]),_._v(" "),n("p",[_._v("和右线性文法构造NFA相反，由"),n("code",{pre:!0},[_._v("δ(A, a) = B")]),_._v("可以得到"),n("code",{pre:!0},[_._v("A -> aB")]),_._v("，如果其中B是终止符号，还可以得到"),n("code",{pre:!0},[_._v("A -> a")]),_._v("。")]),_._v(" "),n("h2",[_._v("DFA的化简（极小化）")]),_._v(" "),n("p",[_._v("状态等价的概念：如果两个状态接收相同的串都能够在最后到达同一终止状态，则两状态等价")]),_._v(" "),n("p",[_._v("化简的目标：若某个DFA中不存在互为等价状态的状态和不可达状态，则称此DFA是最小化的")]),_._v(" "),n("p",[_._v("最小化算法："),n("strong",[_._v("填表法")])]),_._v(" "),n("p",[_._v("思路：构造下三角表格，把非等价状态在图中用"),n("code",{pre:!0},[_._v("X")]),_._v("标出，最后得到等价关系")]),_._v(" "),n("p",[_._v("例题如图：")]),_._v(" "),n("p",[n("img",{attrs:{src:e(636),alt:"2-13"}})]),_._v(" "),n("p",[_._v("注意构造表格的时候横坐标是第1个状态到第n-1个状态，纵坐标是第n个状态到第2个状态")]),_._v(" "),n("p",[_._v("表格填充过程：")]),_._v(" "),n("ol",[n("li",[_._v("终态和非终态一定不等价")]),_._v(" "),n("li",[_._v("区分终态与终态是否等价，非终态与非终态是否等价")])]),_._v(" "),n("p",[_._v("最后表格中没有"),n("code",{pre:!0},[_._v("X")]),_._v("的单元格的横坐标与纵坐标是等价的")]),_._v(" "),n("p",[_._v("注意先删除不可达状态")]),_._v(" "),n("h2",[_._v("正则语言的泵浦(Pumping)引理")]),_._v(" "),n("p",[_._v("所有正则语言都满足的性质：pumping性质")]),_._v(" "),n("p",[_._v("定理：设L是正则集，存在常数n，对字符串"),n("code",{pre:!0},[_._v("ω ∈ L")]),_._v("且"),n("code",{pre:!0},[_._v("|ω| >= n")]),_._v("，则ω可以写成ω1ω0ω2，其中"),n("code",{pre:!0},[_._v("|ω1ω0| <= n, |ω0| > 0")]),_._v("，且对所有的"),n("code",{pre:!0},[_._v("i >= 0")]),_._v("有"),n("code",{pre:!0},[_._v("ω1ω0^iω2 ∈ L")])]),_._v(" "),n("p",[_._v("定理的物理意义：因为正则集一定可以转换为DFA。假设DFA中的状态数为n，如果某个串ω的长度大于n，那么这个串必定经过了DFA中某个相同的状态至少两次（鸽巢原理），那么这个DFA中就存在一个循环。之前的串ω就可以被分解为三个部分ω1、ω0和ω2，其中ω0就是循环体。针对这个循环体，理论上说循环任意次数，DFA都能够接收这个串。也就是对任意非负整数i，有"),n("code",{pre:!0},[_._v("ω1ω0^iω2 ∈ L")]),_._v("。显然其中ω0长度必须大于0，ω1ω0的长度应该小于n。")]),_._v(" "),n("p",[n("strong",[_._v("泵浦引理用来证明某个语言不是正则语言")])]),_._v(" "),n("p",[_._v("证明方法：反证法。假设这个语言是正则语言，使用泵浦引理。如果发现了某个i使循环体循环i次之后得到的串不满足语言要求，则这个语言不是正则语言（因为正则语言循环体循环任意次都满足要求）")]),_._v(" "),n("p",[_._v("通常需要假设一个n作为"),n("strong",[_._v("泵长")]),_._v("，即DFA中的状态数量，然后根据语言的条件和n生成一个长度大于n的串，分类讨论其中的循环体ω0只能为某种格式，再证明这种格式的循环体循环i次之后不满足原语言的条件。")]),_._v(" "),n("p",[_._v("例题：证明"),n("code",{pre:!0},[_._v("L = {a^n b^n | n为正整数}")]),_._v("不是正则集")]),_._v(" "),n("p",[_._v("证明：若L是正则集，假设泵长为k，那么串"),n("code",{pre:!0},[_._v("ω = a^k b^k")]),_._v("为此正则集中一个串。把ω拆分为三部分ω1ω0ω2，其中ω0为循环体，显然ω0不能只包含a或者只包含b，因为这样的话ω0的任意次方会导致新生成的串中a与b数量不同，不满足语言条件。所以ω0同时包含a和b。因为ω0长度大于0，所以ω0最短应为串ω的第n位与第n+1位，也就是"),n("code",{pre:!0},[_._v("ω0 = ab")]),_._v("，此时"),n("code",{pre:!0},[_._v("ω1 = a^(n-1)")]),_._v("，"),n("code",{pre:!0},[_._v("|ω1ω0| = n + 1 > n")]),_._v("，不满足条件。事实上ω0可以为"),n("code",{pre:!0},[_._v("a^x b^x")]),_._v("其中x小于等于n，这样构造出的ω1ω0的长度还是大于n，所以在一个长度大于n的串中找不到这样一个循环体ω0，不满足泵浦引理，所以原语言不是正则语言。")]),_._v(" "),n("h2",[_._v("右线性语言的封闭性")]),_._v(" "),n("p",[_._v("右线性语言及其"),n("strong",[_._v("并、积、闭包")]),_._v("是正则集")]),_._v(" "),n("h2",[_._v("正则语言的几个判定性质")]),_._v(" "),n("h3",[_._v("判定正则语言是否为空")]),_._v(" "),n("p",[_._v("无法到达终止状态的语言视为空语言（即不接受任何串、任何串都无法到达终态）")]),_._v(" "),n("p",[_._v("算法复杂度O(n^2)")]),_._v(" "),n("h3",[_._v("判定正则语言是否包含特定的字符串")]),_._v(" "),n("ul",[n("li",[_._v("如果用DFA表示正则语言\n"),n("ul",[n("li",[_._v("如果DFA处理此串能够到达终态则包含此串")]),_._v(" "),n("li",[_._v("假设串长为n，算法复杂度O(n)")])])]),_._v(" "),n("li",[_._v("如果用NFA或ε-NFA表示正则语言\n"),n("ul",[n("li",[_._v("可以转换为DFA再判断")]),_._v(" "),n("li",[_._v("也可以直接判定是否能够到达终态")]),_._v(" "),n("li",[_._v("算法复杂度O(n2^s)，n为串长，s为自动机状态数量")])])]),_._v(" "),n("li",[_._v("如果用正则表达式表示正则语言\n"),n("ul",[n("li",[_._v("转换为等价的ε-NFA再判断")])])])]),_._v(" "),n("h3",[_._v("判定两个正则语言是否相等")]),_._v(" "),n("p",[_._v("构造DFA判断两个DFA是否相等")]),_._v(" "),n("h2",[_._v("有输出的有限自动机")]),_._v(" "),n("ul",[n("li",[_._v("米兰机 输入和状态影响输出")]),_._v(" "),n("li",[_._v("摩尔机 状态影响输出，与输入无关")])]),_._v(" "),n("p",[_._v("有输出的自动机功能更多，可以减少状态")]),_._v(" "),n("h3",[_._v("米兰机")]),_._v(" "),n("p",[_._v("输出由输入和当前状态决定")]),_._v(" "),n("p",[_._v("米兰机的形式定义："),n("code",{pre:!0},[_._v("M = (Q, T, R, δ, g, q0)")]),_._v("，其中")]),_._v(" "),n("ul",[n("li",[_._v("Q 有限状态集")]),_._v(" "),n("li",[_._v("T 有限输入字母表")]),_._v(" "),n("li",[_._v("R 有限输出字母表")]),_._v(" "),n("li",[_._v("δ 转换函数")]),_._v(" "),n("li",[_._v("g 输出函数")]),_._v(" "),n("li",[_._v("q0 初始状态")])]),_._v(" "),n("p",[_._v("δ函数和g函数共同描述了米兰机的工作状况如：")]),_._v(" "),n("ul",[n("li",[_._v("δ(p, a) = q")]),_._v(" "),n("li",[_._v("g(p, a) = b")])]),_._v(" "),n("p",[_._v("这样两个式子可以得到下图")]),_._v(" "),n("p",[n("img",{attrs:{src:e(637),alt:"2-14"}})]),_._v(" "),n("p",[_._v("在状态转移箭头上面的"),n("code",{pre:!0},[_._v("a/b")]),_._v("表示输入a输出b")]),_._v(" "),n("p",[_._v("米兰机例题：")]),_._v(" "),n("p",[n("img",{attrs:{src:e(638),alt:"2-15"}})]),_._v(" "),n("h3",[_._v("摩尔机")]),_._v(" "),n("p",[_._v("输出与到达的状态有关")]),_._v(" "),n("p",[_._v("形式定义："),n("code",{pre:!0},[_._v("M = (Q, T, R, δ, g, q0)")]),_._v("，形式和米兰机一样，但是输出函数的参数只有当前状态。")]),_._v(" "),n("p",[_._v("比如这样的输出函数和状态转移函数：")]),_._v(" "),n("ul",[n("li",[_._v("δ(q, a) = p")]),_._v(" "),n("li",[_._v("g§ = b2")])]),_._v(" "),n("p",[_._v("意为状态q接收输入a可以转移到状态p，转移到状态p时输出字符b2。图形表示如下：")]),_._v(" "),n("p",[n("img",{attrs:{src:e(639),alt:"2-16"}})]),_._v(" "),n("p",[_._v("摩尔机例题：")]),_._v(" "),n("p",[n("img",{attrs:{src:e(640),alt:"2-17"}})]),_._v(" "),n("h3",[_._v("已知摩尔机构造等价米兰机")]),_._v(" "),n("p",[_._v("可以看到米兰机的输出在状态转移箭头上，摩尔机的输出在状态中")]),_._v(" "),n("p",[_._v("想要根据摩尔机构造等价米兰机，只需要把目标状态中的输出放到状态转移箭头上面即可")]),_._v(" "),n("p",[_._v("例题：")]),_._v(" "),n("p",[n("img",{attrs:{src:e(641),alt:"2-18"}})]),_._v(" "),n("h3",[_._v("已知米兰机构造摩尔机（略）")])])}]};_.exports={attributes:{layout:"collection",title:"有限自动机与右线性文法",collection:"FormalLanguageAndAutomata"},vue:{render:n.render,staticRenderFns:n.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(_){return this.templateRender?this.templateRender():_("div","Rendering")},created:function(){this.templateRender=n.render,this.$options.staticRenderFns=n.staticRenderFns}}}}},624:function(_,v,e){_.exports=e.p+"img/55d9d13.png"},625:function(_,v,e){_.exports=e.p+"img/43c95ef.png"},626:function(_,v,e){_.exports=e.p+"img/edb711a.png"},627:function(_,v,e){_.exports=e.p+"img/1756235.png"},628:function(_,v,e){_.exports=e.p+"img/1388af2.png"},629:function(_,v,e){_.exports=e.p+"img/9f117e8.png"},630:function(_,v,e){_.exports=e.p+"img/51eeb9e.png"},631:function(_,v,e){_.exports=e.p+"img/960ed0f.png"},632:function(_,v,e){_.exports=e.p+"img/7018fbd.png"},633:function(_,v,e){_.exports=e.p+"img/d65e00c.png"},634:function(_,v,e){_.exports=e.p+"img/2df36e0.png"},635:function(_,v,e){_.exports=e.p+"img/8a30742.png"},636:function(_,v,e){_.exports=e.p+"img/c0e8f08.png"},637:function(_,v,e){_.exports=e.p+"img/da5f085.png"},638:function(_,v,e){_.exports=e.p+"img/8a74bf7.png"},639:function(_,v,e){_.exports=e.p+"img/9af2db6.png"},640:function(_,v,e){_.exports=e.p+"img/d3d0c77.png"},641:function(_,v,e){_.exports=e.p+"img/87457e5.png"}}]);